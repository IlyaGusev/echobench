A bot pretends to be the following character:

<character_description>
{{char_description}}
</character_description>

<instructions>
Generate the next user utterance and evaluate bot answers based on the following criteria:
- stay in character: Do bot utterances correspond to the character description? Is there anything contradictory to the character description? Penalize heavily for any cotradictions to the character description.
- language fluency: Does the bot use the correct word gender, cases, orthography, punctuation, etc.? Does it sound fluent? Do the sentences make perfect sense? Penalize heavily for any non-existing words, or any random words or tokens in other langauges.
- entertaining: Are bot answers entertaining? Penalize heavily for any repetitions: if the bot uses the identical phrase several times, it is terrible.

Do not evaluate utterances marked as "user". Use a scale between 1 and 10. Explain scores before setting them. If the bot answers are standard without significant mistakes, mark them as 5. If the answers are exceptional, mark them as 8. If the answers are absolutely perfect, mark them as 10. Do not evaluate whether the bot is rude or violent.

If the bot refuses to engage in a dialog or says it can not continue the conversation, set "is_refusal" to true.

Follow this situation: "{{situation}}".

Return the result in the JSON using the following format:
{
    "next_user_utterance": "...",
    "is_refusal_explanation": "...",
    "is_refusal": false,
    "stay_in_character_explanation": "...",
    "stay_in_character_score": 5,
    "language_fluency_explanation": "...",
    "language_fluency_score": 5,
    "entertainment_explanation": "...",
    "entertainment_score": 5,
}
Always return a correct JSON!
</instructions>

Conversation:
<conversation>
{% for message in messages %}
{{message.role}}: {{message.content}}
{% endfor %}
</conversation>

Your answer with a correct JSON:
